// "Lava-Lamp"

// Note: this version of the Lava-Lamp script needs FW x.7.0.36 or later

// How to use:
// - create a LED light of type "stack" (set "Feature Config" to "stack")
//   for this effect to appear
// - put this script into a scene of your choice
// - make sure the light has a non-zero brightness in this scene
// - call the scene, the scene script will execute and generate the effect

// remove all existing subviews (blobs from previous runs)
view.clear()
view.configure({
  framing: 'clipX|clipY',
  bgcolor: '#001608', // yellow orange
})

// get the frame of the area to display the "lava" animation
var area = ledchaincover()

// the sea view is a slightly "waving" bottom
var sea = {
  type: 'lightspot',
  label: 'sea',
  orientation: 'up',
  content_dx: 5,
  color: '#480',
  bgcolor: '0000',
  alpha:255,
  z_order: 1000,
  // finetuning
  brightness_gradient: -1,
  hue_gradient: 0.34,
  saturation_gradient: 0,
  brightness_mode: 'linear|oscillating|unlimited',
  hue_mode: 'linear|oscillating|unlimited',
  saturation_mode: 'linear|oscillating|unlimited',
  radial: false,
}
sea += area
sea.content_dy = sea.dx/2+1
sea.content_y = sea.dx/2
sea.dy = 5
var s = makeview(sea)
view.addview(s)
// make it "rocking" a bit with a continuously running back-and-forth animation of the rotation parameter
s.animator('rotation').repeat(-1,true).step(0.05,1).from(-8).runto(8,20)

var blobcount = 0
var currentblobs = 0

while (true) {

  var dmin = min(area.dx, area.dy)
  var blobsz = random(dmin/4, dmin/3, 1)
  var blob = {
    type: 'lightspot',
    content_dx: blobsz,
    content_dy: blobsz,
    color: hsv(random(15, 90, 1)), // orange to yellow
    bgcolor: '0000', // transparent background (important)
    alpha:200,
    z_order: 900,
    // finetuning
    brightness_gradient: -1,
    hue_gradient: 0,
    saturation_gradient: 0,
    brightness_mode: 'linear|oscillating|unlimited',
    hue_mode: 'linear|oscillating|unlimited',
    saturation_mode: 'linear|oscillating|unlimited',
    radial: true,
  }
  blob += area
  blobcount++
  blob.label = format("blob_%d", blobcount)

  var v = makeview(blob)
  v.content_x = blobsz
  v.content_y = blobsz

  // tube
  //v.framing = 'repeatX|clipY' // wrap around tube in X-direection
  //v.x = random(0, area.dx, 1) // random position somewhere around the tube

  // flat
  v.framing = 'clipX|clipY' // wrap around tube in X-direection
  v.x = random(-3, area.dx+3, 1)-blobsz // random position somewhere on the area, center >=2 pix from border

  view.addview(v)

  // further "life" of the blob view (moving up, sinking down again) now happens in a concurrent thread
  concurrent passing v {
    currentblobs++
    // move up
    threadvar a = v.animator('scroll_y').function('easeout').from(v.content_dy*2).runto(-area.dy+v.content_dy,random(15,22))
    await(a)
    // sink down again
    a = v.animator('scroll_y').function('easein').runto(v.content_dy*2,random(18,30))
    await(a)
    // that's it for this blob, remove it
    v.remove()
    currentblobs--
    log(6, '%s removed, now=%d',v.label, currentblobs)
  }

  // wait a bit before creating another blob
  delay(random(4,15))
  while (currentblobs>=3) {
    // wait longer when we already have 3 or more blobs
    delay(20)
  }
}
